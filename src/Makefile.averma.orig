include $(DZ_PROJECT_PATH)/include.mk

DZ_PKG_BUILD_SCRIPT = $(DZ_PROJECT_PATH)/build_pkg/dz_prepkg.sh
DZ_RPM_BUILD_SCRIPT = $(DZ_PROJECT_PATH)/build_pkg/dz_makerpm.sh

DZ_PACKAGE_DIR_BASE = $(DZ_PROJECT_PATH)/packaging
DZ_PACKAGE_DIR_SHIP_BASE = $(DZ_PACKAGE_DIR_BASE)
DZ_PACKAGE_DIR_SHIP_COMPLETE = $(DZ_PACKAGE_DIR_SHIP_BASE)/release


#DZ_PACKAGE_NAME_BASE = avm
DZ_PACKAGE_NAME_BASE = zaidstor_databank
#DZ_PACKAGE_NAME_BASE = "zaidstor_databank_""`date +'%d_%m_%Y_%H_%M_%S'`"
DZ_PACKAGE_NAME_SHIP_COMPLETE = $(DZ_PACKAGE_NAME_BASE)
DZ_PACKAGE_NAME_SHIP_SOURCE_CODE = avm_src

#########################################################################
# Kernel Module Generation
#########################################################################

OBJ_FILES                   := $(SRC_FILES:.c=.o)
EXTRA_CFLAGS                +=-g -I $(DZ_HEADERS_PATH) -I $(DZ_HASH_PATH) -I . -DDZ_BIT_SPIN_LOCK -Wall -Werror -Wfatel-errors

KERNEL_MODULE_NAME           = datumsoft_zaidstor_avm_aisa_target_module
$(KERNEL_MODULE_NAME)-objs   = $(OBJ_FILES)
obj-m                       := $(KERNEL_MODULE_NAME).o

.PHONY: subdirs $(DZ_SUBDIRS) tag

help:
	@echo "################################################################################"
	@echo "      DATAUMSOFT AVM Build/Make Help "
	@echo "################################################################################"
	@echo ""
	@echo "1) To build all engines/modules"
	@echo "# make all"
	@echo ""
	@echo "2) To build selcted engine module. E.g. bec module "
	@echo "# make bec"
	@echo ""
	@echo "3) To build sysfs engine target only"
	@echo "# make sysfs"
	@echo ""
	@echo "5) To build RPM Package. It will build CLI and Kernel modules in one rpm package "
	@echo "# make pkg"
	@echo ""
	@echo "Normal Usage:"
	@echo "# make clean all"
	@echo "# make ca"
	@echo "# make clean all pkg"
	@echo "# make cap"
	@echo "################################################################################"

disclaimer:
	for f in `find . -name test.c`; do echo $$f; cat disclaimer.txt > temp.c; cat $$f >> temp.c; mv temp.c $$f; done

subdirs:sysfs_engine

$(sysfs_engine):
	$(MAKE) -C $@

aisa:
	@echo ""
	@echo "####################################"
	@echo "Building AVM AISA Target"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
	@echo ""
	date

infra:

	@echo ""
	@echo "####################################"
	@echo "Building AVM Infrastructure Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/infra_engine modules
	make -C /home/averma/kernel/linux-3.10.1/linux-3.10.1 M=$(PWD)/infra_engine modules
	@echo ""
	@cp $(PWD)/infra_engine/*.ko .
	@echo ""
	@date

infra2:

	@echo ""
	@echo "####################################"
	@echo "Building AVM Infrastructure Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /home/averma/kernel/linux-3.10.1/linux-3.10.1 M=$(PWD)/infra_engine modules
	@echo ""
	@cp $(PWD)/infra_engine/*.ko .
	@echo ""
	@date

bec:infra

	@echo ""
	@echo "########################################"
	@echo "Building AVM BEC (Back End Cache) Engine"
	@date
	@echo "########################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/bec_engine modules
	@echo ""
	@cp $(PWD)/bec_engine/*.ko .
	@echo ""
	@date


dedupe:infra bec

	@echo ""
	@echo "####################################"
	@echo "Building AVM Dedupe Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/dedupe_engine modules
	@echo ""
	@cp $(PWD)/dedupe_engine/*.ko .
	@echo ""
	@date

metadata:infra bec dedupe

	@echo ""
	@echo "####################################"
	@echo "Building AVM Metadata Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/metadata_engine modules
	@echo ""
	@cp $(PWD)/metadata_engine/*.ko .
	@echo ""
	@date

fec:infra bec dedupe metadata

	@echo ""
	@echo "#########################################"
	@echo "Building AVM FEC (Front End Cache) Engine"
	@date
	@echo "#########################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/fec_engine modules
	@echo ""
	@cp $(PWD)/fec_engine/*.ko .
	@echo ""
	@date

target:infra bec dedupe metadata fec

	@echo ""
	@echo "####################################"
	@echo "Building AVM Target Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/target_engine modules
	@echo ""
	@cp $(PWD)/target_engine/*.ko .
	@echo ""
	@date

volume:target

	@echo ""
	@echo "####################################"
	@echo "Building AVM Volume Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/volume_engine modules
	@echo ""
	@cp $(PWD)/volume_engine/*.ko .
	@echo ""
	@date
	
sysfs:volume

	@echo ""
	@echo "####################################"
	@echo "Building AVM Sysfs Engine"
	@date
	@echo "####################################"
	@echo ""
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/sysfs_engine modules
	@echo ""
	cp $(PWD)/sysfs_engine/*.ko .
	@echo ""
	date

pkg:
	@echo ""
	@echo "##################################################################################"
	@echo "Building RPM Package of AVM" 
	@date
	@echo "##################################################################################"
	@echo ""
	@DZ_PROJECT_PATH=$(DZ_PROJECT_PATH) \
		DZ_PACKAGE_DIR=$(DZ_PACKAGE_DIR_SHIP_COMPLETE) DZ_PACKAGE_NAME=${DZ_PACKAGE_NAME_SHIP_COMPLETE} \
		${DZ_RPM_BUILD_SCRIPT} > /dev/null
	@echo "##################################################################################"
	@echo ""
	@date
	#scp packaging/release/avm-1.0-0.el7.centos.x86_64.rpm root@192.168.122.233:/home/aisa/

package:pkg


srcpkg:
	@echo ""
	@echo "##################################################################################"
	@echo "Building RPM Package of AVM Source Code" 
	@echo "##################################################################################"
	@echo ""
	@DZ_PROJECT_PATH=$(DZ_PROJECT_PATH) \
		DZ_PACKAGE_DIR=$(DZ_PACKAGE_DIR_SHIP_COMPLETE) DZ_PACKAGE_NAME=${DZ_PACKAGE_NAME_SHIP_SOURCE_CODE} \
		${DZ_RPM_BUILD_SCRIPT}
	@echo "##################################################################################"
	@echo ""
	#scp packaging/release/avm-1.0-0.el7.centos.x86_64.rpm root@192.168.122.233:/home/aisa/
	date

c:clean

a:all

p:pkg


KERNEL_MODULES := $(DZ_LOG_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_INFRA_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_BEC_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_METADATA_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_DEDUPE_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_FEC_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_TARGET_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_VOLUME_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_SYSFS_ENGINE_KERNEL_MODULE_NAME).ko
KERNEL_MODULES += $(DZ_LAB_ENGINE_KERNEL_MODULE_NAME).ko

#all:$(KERNEL_MODULES)
alld:tags
	logger `date`
	#@echo ""
	#@echo "################################################"
	#@echo "1/11 - Building AVM Log Engine"
	#@echo "################################################"
	#@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/log_engine modules
	#@make -C /home/averma/mobile/kernel.org/4.14.270/linux-4.14.270/build M=$(PWD)/log_engine modules
	#@mv $(PWD)/log_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "2/11 - Building AVM Infrastructure Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/infra_engine modules
	@mv $(PWD)/infra_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "3/11 - Building AVM LAB Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/lab_engine modules
	@mv $(PWD)/lab_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "4/11 - Building AVM BEC (Back End Cache) Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/bec_engine modules
	@mv $(PWD)/bec_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "5/11 - Building AVM Metadata Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/metadata_engine modules
	@mv $(PWD)/metadata_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "6/11 - Building AVM Dedupe Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/dedupe_engine modules
	@mv $(PWD)/dedupe_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "7/11 - Building AVM FEC (Front End Cache) Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/fec_engine modules
	@mv $(PWD)/fec_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "8/11 - Building AVM Alignment Engine Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/alignment_engine modules
	@mv $(PWD)/alignment_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "9/11 - Building AVM Target Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/target_engine modules
	@mv $(PWD)/target_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "10/11 - Building AVM Volume Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/volume_engine modules
	@mv $(PWD)/volume_engine/*.ko .

	@echo ""
	@echo "################################################"
	@echo "11/11 - Building AVM Sysfs Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/sysfs_engine modules
	@mv $(PWD)/sysfs_engine/*.ko .


	@echo ""
	@echo "##################################################################################"
	@echo "List and Checksum of Kernel Modules generated" 
	@echo "##################################################################################"
	@cksum *.ko
	@echo "##################################################################################"
	@echo "Compilation Done"
	@date
	@echo "##################################################################################"

d:alld




all:

	logger `date`
#	@echo ""
#	@echo "################################################"
#	@echo "1/11 - Building AVM Log Engine"
#	@echo "################################################"
#	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/log_engine modules > /dev/null
#	@cp     $(PWD)/log_engine/*.ko .
#	#@rm -rf $(PWD)/log_engine/*.o
#	#@rm -rf $(PWD)/log_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "2/11 - Building AVM Infrastructure Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/infra_engine modules > /dev/null
	@cp     $(PWD)/infra_engine/*.ko .
	#@rm -rf $(PWD)/infra_engine/*.o
	#@rm -rf $(PWD)/infra_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "3/11 - Building AVM LAB Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/lab_engine modules > /dev/null
	@cp     $(PWD)/lab_engine/*.ko .
	#@rm -rf $(PWD)/lab_engine/*.o
	#@rm -rf $(PWD)/lab_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "4/11 - Building AVM BEC (Back End Cache) Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/bec_engine modules > /dev/null
	@cp     $(PWD)/bec_engine/*.ko .
	#@rm -rf $(PWD)/bec_engine/*.o
	#@rm -rf $(PWD)/bec_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "5/11 - Building AVM Metadata Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/metadata_engine modules > /dev/null
	@cp     $(PWD)/metadata_engine/*.ko .
	#@rm -rf $(PWD)/metadata_engine/*.o
	#@rm -rf $(PWD)/metadata_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "6/11 - Building AVM Dedupe Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/dedupe_engine modules > /dev/null
	@cp     $(PWD)/dedupe_engine/*.ko .
	#@rm -rf $(PWD)/dedupe_engine/*.o
	#@rm -rf $(PWD)/dedupe_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "7/11 - Building AVM FEC (Front End Cache) Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/fec_engine modules > /dev/null
	@cp     $(PWD)/fec_engine/*.ko .
	#@rm -rf $(PWD)/fec_engine/*.o
	#@rm -rf $(PWD)/fec_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "8/11 - Building AVM Alignment Engine Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/alignment_engine modules > /dev/null
	@mv $(PWD)/alignment_engine/*.ko .
	#@rm -rf $(PWD)/alignment_engine/*.o
	#@rm -rf $(PWD)/alignment_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "9/11 - Building AVM Target Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/target_engine modules > /dev/null
	@cp     $(PWD)/target_engine/*.ko .
	#@rm -rf $(PWD)/target_engine/*.o
	#@rm -rf $(PWD)/target_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "10/11 - Building AVM Volume Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/volume_engine modules > /dev/null
	@cp     $(PWD)/volume_engine/*.ko .
	#@rm -rf $(PWD)/volume_engine/*.o
	#@rm -rf $(PWD)/volume_engine/*.mod.c

	@echo ""
	@echo "################################################"
	@echo "11/11 - Building AVM Sysfs Engine"
	@echo "################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/sysfs_engine modules > /dev/null
	@cp     $(PWD)/sysfs_engine/*.ko .
	#@rm -rf $(PWD)/sysfs_engine/*.o
	#@rm -rf $(PWD)/sysfs_engine/*.mod.c


	@echo ""
	@echo "##################################################################################"
	@echo "List and Checksum of Kernel Modules generated" 
	@echo "##################################################################################"
	@cksum *.ko
	@echo "##################################################################################"
	@echo "Compilation Done"
	@date
	@echo "##################################################################################"

clean:

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Log Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/log_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Infra Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/infra_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning LAB Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/lab_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning BEC Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/bec_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning FEC Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/fec_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Alignment Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/alignment_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Dedupe Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/dedupe_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Metadata Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/metadata_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Target Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/target_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Volume Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/volume_engine clean > /dev/null

	@echo ""
	@echo "#########################################################"
	@echo "Cleaning Sysfs Engine" `date`
	@echo "#########################################################"
	@make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/sysfs_engine clean > /dev/null

	@rm -rf $(OBJ_FILES)
	@rm -rf objdump.txt
	@rm -rf *.ko
	@echo ""
	@echo "#########################################"
	@echo "Cleaning Completed"
	@date
	@echo "#########################################"

ca:clean all
	

. PHONY avm:
	avm aisa
lsmod:log
	lsmod |grep datazaid_avm_aisa_module


install:
	

load:ins

drm:log
	dmsetup remove AISA
	rmmod datazaid_avm_aisa_target_module.ko

dmr:log
	dmsetup remove AISA
	rmmod datazaid_avm_aisa_target_module.ko

rm:log
	rmmod datazaid_avm_sysfs_engine_module.ko
	rmmod datazaid_avm_volume_engine_module.ko
	rmmod datazaid_avm_aisa_target_module.ko

ls:lsmod
	dmsetup ls

clear:log
	#dmsetup -f remove aisavfv
	losetup -D
	rmmod datazaid_avm_aisa_module.ko

.PHONY: tags tag

tag:tags

tags:
	rm -rf tags
	ctags -R
	

log:

	logger `date`
	@echo ""
	@echo "#########################################"
	@echo "Building AVM Log Engine"
	@date
	@echo "#########################################"
	@echo ""
	@make -C /home/averma/mobile/kernel.org/4.14.270/linux-4.14.270/ M=$(PWD)/log_engine modules
	@echo ""
	@cp $(PWD)/log_engine/*.ko .
	@echo ""
	@date


ca:clean all

cap:clean all package
ap:all package
at:all test
cat: clean all test
captain:clean all package test
capt:clean all package test

capt: cap test

loc:
	@echo ""
	@echo "############################"
	@echo "Generating Lines of Code"
	@date
	@make clean > /dev/null 2>&1
	@rm -rf tags
	@rm -rf cscope.out
	@echo ""

	@echo " Kernel Space Lines of Code"
	@wc -l headers/*.h $(SRC_FILES) log_engine/{Makefile,*.c} alignment_engine/{Makefile,*.c} infra_engine/{Makefile,*.c} bec_engine/{Makefile,*.c} fec_engine/{Makefile,*.c}  dedupe_engine/{Makefile,*.c} metadata_engine/{Makefile,*.c} target_engine/{Makefile,*.c} volume_engine/{Makefile,*.c} sysfs_engine/{Makefile,*.c,*.py,*.raw} Makefile |grep total
	@echo ""
	@echo " User   Space Lines of Code"
	@wc -l cli_engine/AISA_Avm.py cli_engine/AISA_AVM*.py cli_engine/AISA_Utils.py cli_engine/AISA_Defaults.py scripts/avmconf.sh |grep total
	@echo ""
	@echo " Total Lines of Code"
	@wc -l headers/*.h $(SRC_FILES) log_engine/{Makefile,*.c} alignment_engine/{Makefile,*.c} infra_engine/{Makefile,*.c} bec_engine/{Makefile,*.c} fec_engine/{Makefile,*.c} dedupe_engine/{Makefile,*.c} metadata_engine/{Makefile,*.c}  target_engine/{Makefile,*.c} volume_engine/{Makefile,*.c} sysfs_engine/{Makefile,*.c,*.py,*.raw} Makefile cli_engine/AISA_Avm.py cli_engine/AISA_AVM*.py cli_engine/AISA_Utils.py cli_engine/AISA_Defaults.py scripts/avmconf.sh build_pkg/dz_makerpm.sh build_pkg/dz_rpm_basic.spec build_pkg/dz_prepkg.sh |grep total
	@echo "############################"
	@echo ""

obj:objdump

objdump:
	objdump -D -d -S  $(KERNEL_MODULE_NAME).ko > objdump.txt

#########################################################################
# Miscellaneous Commands
#########################################################################

.PHONY: dde fec bec db
dde:
	cat /sys/kernel/avm/dedupe

sysfec:
	cat /sys/kernel/avm/fec

sysbec:
	cat /sys/kernel/avm/bec

db:
	cat /sys/kernel/avm/bec
	cat /sys/kernel/avm/dedupe
	cat /sys/kernel/avm/fec
	dmesg

zero:
	#dd if=/dev/zero of=/dev/mapper/AISA bs=8192 
	dd if=/dev/zero of=/dev/md0 bs=8192 count=1024
	dd if=/dev/zero of=/dev/md1 bs=8192 count=1024

#Clean /var/crash
varc:
	rm -rf /var/crash/*
	sync

.PHONY: configfs
configfs:
	mount -t configfs none /config

vi:
	gvim -p  fec_engine_flush.c $(VI_FILES)

#ln -s /aisa/aisa_tree/src/storage_engine/user/cli/AISA_FlashVol.py avm

backup:
	date +'%d_%m_%Y_%H_%M_%S'
	(cd ../../../../; pwd)
	pwd

pagec:
	echo 1 > /proc/sys/vm/drop_caches
	sync
	
scp:
	#scp *.ko /home/aisa/flash_volume_manager/cli/* aisa@192.168.122.233:/home/aisa/avm/
	scp *.ko makefile.remote /home/aisa/avmdev/cli/*.py root@192.168.122.233:/home/aisa/avm/

treboot:
	ssh root@192.168.122.233 "cd /home/aisa/avm; make -f /home/aisa/avm/makefile.remote treboot"

tshut:
	ssh root@192.168.122.233 "cd /home/aisa/avm; make -f /home/aisa/avm/makefile.remote tshut"

list:
	find . -name "*.ko"

cs:
	rm -rf tags cscope.out ; ctags -R ; cscope -R

scppkg:
	@scp packaging/release/zaidstor_databank-1.1.a_3.10-101.el7.centos.x86_64.rpm root@testvm:/home/aisa/

tstop:
	-@ssh root@testvm "avm stop"

tinstall:
	@ssh root@testvm "make -f /home/aisa/avm/makefile.testvm reinstall"

tstart:
	@ssh root@testvm "avm start"

test:pkg scppkg tstop tinstall tstart

findrpm:
	date
	find . -name "*.rpm" |xargs ls -lrth

crash:
	alias cr="crash /usr/lib/debug/lib/modules/3.10.0-514.el7.x86_64/vmlinux `ls -d /var/crash/* |tail -1`/vmcore"


dm:
	dmesg

dmesg:dm
