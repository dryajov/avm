	echo "This software belongs to NL Verma"
	echo "Do you want to install <some package> [Y/n] " >/dev/tty
	if exec </dev/tty; then
	    read input;
	fi

	if [ $input -eq 0 ]; then

		echo ""
		echo "   ############################################################################"
		echo ""
		echo "   Checking existence of Data and MetaData Disks"
		#%{RPM_DIR}/bin/AISA_Avm.py --config  > /dev/null 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --config  > %{RPM_DIR}/logs/config.log 2>&1
		if [ $? -eq 0 ]; then
			idisks=`%{RPM_DIR}/bin/AISA_Avm.py --disks > /dev/null 2>&1`
			
			echo "   Good ! Data and MetaData Disks found"
			echo ""
			echo "   Creating AISA Target of 5 GB. Wait for few seconds"
			%{RPM_DIR}/bin/AISA_Avm.py --create AISA --size 5 > /dev/null 2>&1
			if [ $? -eq 0 ]; then
				echo "   AISA Target Created successfully."
				echo ""
				echo "   Congratulations !!!"
				echo "   Package is installed successfully in %{CLEAN_DIR}"
			else
				echo "   AISA Target Creation Failed."
				echo "   Check /var/log/messages or 'cat /dev/dzlog'"
				echo ""
				echo "   Congratulations With Warning !!!"
				echo "   Package is installed successfully in %{CLEAN_DIR},"
				echo "   but AISA Target was not created."
				echo "   Check /var/log/messages or 'cat /dev/dzlog' for root cause."
			fi
		else
			echo "   [1] Data Disk or MetaDisk or both is/are NOT accessible/present"
			echo "   OR"
			echo "   [2] Kernel Modules are not loaded correctly or missing"

			echo "   Kindly set the proper path in config file"
		fi

		                               dmesg -H > %{RPM_DIR}/logs/dmesg.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --info  all  > %{RPM_DIR}/logs/devices_info.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --stats -s   > %{RPM_DIR}/logs/superblock.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --stats all  > %{RPM_DIR}/logs/engines_stats.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --list  all  > %{RPM_DIR}/logs/volumes_list.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --status     > %{RPM_DIR}/logs/sys_entries.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --km         > %{RPM_DIR}/logs/kernel_modules.log 2>&1
		%{RPM_DIR}/bin/AISA_Avm.py --size all   > %{RPM_DIR}/logs/disks_size.log 2>&1

		echo ""
		echo "   Please refer to README.cli in %{RPM_DIR}/docs folder for cli commands"
		echo ""
		echo "   AVM Config file Dir         : %{CONFIG_PATH}"
		echo "   AVM Config file Name        : %{CONFIG_PATH}avm.conf"
		echo "   AVM Target Info file Name   : %{RPM_DIR}/logs/devices_info.log"
		echo "   AVM Initial Stats file Name : %{RPM_DIR}/logs/engines_stats.log"
		echo "   AVM Superblock Header       : %{RPM_DIR}/logs/superblock.log"
		echo "   AVM Storage Stack Logs      : %{RPM_DIR}/logs/avm.log"
		echo "   AVM Cli interface Name      : avm"
		echo ""
		echo "   ############################################################################"
		echo ""
		echo ""
	else
		echo ""
		echo "   ############################################################################"
		echo ""
		echo "   Congratulations With Warning !!!"
		echo "   Package is installed successfully in %{CLEAN_DIR},"
		echo "   but some kernel modules loading resulted in error"
		echo "   Please uninstall it, reboot and then install the package again."
		echo "   Please refer to README.cli in %{RPM_DIR}/docs folder for cli commands"
		echo ""
		echo ""
		echo "   Config file Dir  : %{CONFIG_PATH}"
		echo "   Config file Name : %{CONFIG_PATH}avm.conf"
		echo "   Main cli command : avm"
		echo ""
		echo "   ############################################################################"
		echo ""
		echo ""

	fi

	################################################
	#Log everything in avm.log file
	################################################
	%{RPM_DIR}/scripts/avmlog.sh f %{RPM_DIR}/logs/avm.log > /dev/null 2>&1

	#Creating alias
	alias cdavm="cd %{RPM_DIR}"
	alias cdlog="cd %{RPM_DIR}/logs"
	alias cdlogs="cd %{RPM_DIR}/logs"
	alias cdl="cd %{RPM_DIR}/logs"
%preun
	###########################
	#echo "Inside PreUninstall"
	###########################

	echo ""
	echo "   ###################################################################"
	echo ""

	ls -l /dev/mapper/AISA > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		echo "   AISA Target found. Destroying it."
		%{RPM_DIR}/bin/AISA_Avm.py destroy > /dev/null
	fi

%postun
	###########################
	#echo "Inside PostUninstall"
	###########################

	#################################################
	#UnLoad the Kernel Modules. Sequence is important
	#################################################

	ls -d /sys/module/datumsoft_avm_8_sysfs_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
			echo "   Unloading Kernel Modules:"
			rmmod datumsoft_avm_8_sysfs_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_7_volume_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_7_volume_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_6_target_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_6_target_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_5_fec_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_5_fec_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_4_dedupe_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_4_dedupe_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_3_metadata_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_3_metadata_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_2_bec_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_2_bec_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_1_infra_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_1_infra_engine_module
	fi

	ls -d /sys/module/datumsoft_avm_0_log_engine_module > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		rmmod datumsoft_avm_0_log_engine_module
	fi

	#sleep 1

	echo "   Deleting config directory %{CONFIG_PATH}"
	rm -rf %{CONFIG_PATH}

	echo "   Deleting installation directory $RPM_BUILD_ROOT%{CLEAN_DIR}"
	rm -rf /usr/bin/avm
	rm -rf %{RPM_DIR}/bin/avm
	rm -rf "$RPM_BUILD_ROOT%{CLEAN_DIR}"
	#rm -rf /usr/bin/avm
	#sleep 1

	echo "   Package is uninstalled successfully on `date`"
	echo ""
	echo "   ###################################################################"
	echo ""
	echo ""

%clean
#[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT

%files
%{CLEAN_DIR}
